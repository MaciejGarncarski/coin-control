services:
  avatar-service:
    image: nginx:1-alpine
    container_name: coin-control-avatars
    ports:
      - 8089:80
    volumes:
      - ./api/avatar-upload/:/coin-control-avatars
      - ./avatar-service/nginx.conf:/etc/nginx/conf.d/default.conf
      - avatar-cache:/var/cache/nginx/static

  database:
    image: postgres:17.4-alpine
    container_name: coin-control-database
    restart: always
    environment:
      PGUSER: postgres
      PGDATABASE: coin_control
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: coin_control
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - app-network
    volumes:
      - coin-control-database-data:/var/lib/postgresql/data
  cache:
    image: redis:6.2-alpine
    container_name: coin-control-cache
    healthcheck:
      test:
        [
          "CMD",
          "redis-cli",
          "-a",
          "eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81",
          "--raw",
          "incr",
          "ping",
        ]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: always
    networks:
      - app-network
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data

  react-email:
    build:
      target: dev
      dockerfile: ./shared/email/react-email.Dockerfile
    volumes:
      - ./shared:/app/shared
    ports:
      - 3003:3000

  worker-dev:
    container_name: coin-control-worker-dev
    build:
      target: dev
      dockerfile: ./worker/worker.Dockerfile
      args:
        - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./worker/src:/app/worker/src
      - ./worker/prisma:/app/worker/prisma
      - ./worker/node_modules:/app/worker/node_modules
      - ./shared:/app/shared
    depends_on:
      - cache
      - database
    networks:
      - app-network
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - APP_ORIGIN=${APP_URL}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASS=${MAIL_PASS}
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81

  api-dev:
    container_name: coin-control-api-dev
    tty: true
    depends_on:
      - cache
      - worker-dev
      - database
    build:
      target: dev
      dockerfile: ./api/api.Dockerfile
      args:
        - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./api/avatar-upload:/app/api/avatar-upload
      - ./api/src:/app/api/src
      - ./api/prisma:/app/api/prisma
      - ./api/node_modules:/app/api/node_modules
      - ./shared:/app/shared
    networks:
      - app-network
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - PORT=${API_PORT}
      - APP_ORIGIN=${APP_URL}
      - API_URL=${API_URL}
      - HOST=${HOST}
      - DATABASE_URL=${DATABASE_URL}
      - API_SECRET=${API_SECRET}
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81

  web-dev:
    container_name: coin-control-web-dev
    build:
      target: dev
      dockerfile: ./web/web.Dockerfile
    depends_on:
      - api-dev
    volumes:
      - ./web/index.html:/app/web/index.html
      - ./web/src:/app/web/src
      - ./shared:/app/shared
    ports:
      - "${WEB_PORT}:${WEB_PORT}"
    environment:
      - VITE_PORT=${WEB_PORT}
      - VITE_API_URL=${API_URL}

networks:
  app-network:
    driver: bridge

volumes:
  avatar-cache:
    driver: local

  cache:
    driver: local

  coin-control-database-data:
    driver: local
