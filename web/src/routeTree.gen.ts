/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NotauthenticatedRouteImport } from './routes/_not_authenticated/route'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedAccountImport } from './routes/_authenticated/account'
import { Route as NotauthenticatedAuthResetPasswordImport } from './routes/_not_authenticated/auth/reset-password'
import { Route as NotauthenticatedAuthRegisterImport } from './routes/_not_authenticated/auth/register'
import { Route as NotauthenticatedAuthLoginImport } from './routes/_not_authenticated/auth/login'

// Create/Update Routes

const NotauthenticatedRouteRoute = NotauthenticatedRouteImport.update({
  id: '/_not_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedAccountRoute = AuthenticatedAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const NotauthenticatedAuthResetPasswordRoute =
  NotauthenticatedAuthResetPasswordImport.update({
    id: '/auth/reset-password',
    path: '/auth/reset-password',
    getParentRoute: () => NotauthenticatedRouteRoute,
  } as any)

const NotauthenticatedAuthRegisterRoute =
  NotauthenticatedAuthRegisterImport.update({
    id: '/auth/register',
    path: '/auth/register',
    getParentRoute: () => NotauthenticatedRouteRoute,
  } as any)

const NotauthenticatedAuthLoginRoute = NotauthenticatedAuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => NotauthenticatedRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_not_authenticated': {
      id: '/_not_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NotauthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/account': {
      id: '/_authenticated/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AuthenticatedAccountImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_not_authenticated/auth/login': {
      id: '/_not_authenticated/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof NotauthenticatedAuthLoginImport
      parentRoute: typeof NotauthenticatedRouteImport
    }
    '/_not_authenticated/auth/register': {
      id: '/_not_authenticated/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof NotauthenticatedAuthRegisterImport
      parentRoute: typeof NotauthenticatedRouteImport
    }
    '/_not_authenticated/auth/reset-password': {
      id: '/_not_authenticated/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof NotauthenticatedAuthResetPasswordImport
      parentRoute: typeof NotauthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteRouteChildren {
  AuthenticatedAccountRoute: typeof AuthenticatedAccountRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedAccountRoute: AuthenticatedAccountRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface NotauthenticatedRouteRouteChildren {
  NotauthenticatedAuthLoginRoute: typeof NotauthenticatedAuthLoginRoute
  NotauthenticatedAuthRegisterRoute: typeof NotauthenticatedAuthRegisterRoute
  NotauthenticatedAuthResetPasswordRoute: typeof NotauthenticatedAuthResetPasswordRoute
}

const NotauthenticatedRouteRouteChildren: NotauthenticatedRouteRouteChildren = {
  NotauthenticatedAuthLoginRoute: NotauthenticatedAuthLoginRoute,
  NotauthenticatedAuthRegisterRoute: NotauthenticatedAuthRegisterRoute,
  NotauthenticatedAuthResetPasswordRoute:
    NotauthenticatedAuthResetPasswordRoute,
}

const NotauthenticatedRouteRouteWithChildren =
  NotauthenticatedRouteRoute._addFileChildren(
    NotauthenticatedRouteRouteChildren,
  )

export interface FileRoutesByFullPath {
  '': typeof NotauthenticatedRouteRouteWithChildren
  '/account': typeof AuthenticatedAccountRoute
  '/': typeof AuthenticatedIndexRoute
  '/auth/login': typeof NotauthenticatedAuthLoginRoute
  '/auth/register': typeof NotauthenticatedAuthRegisterRoute
  '/auth/reset-password': typeof NotauthenticatedAuthResetPasswordRoute
}

export interface FileRoutesByTo {
  '': typeof NotauthenticatedRouteRouteWithChildren
  '/account': typeof AuthenticatedAccountRoute
  '/': typeof AuthenticatedIndexRoute
  '/auth/login': typeof NotauthenticatedAuthLoginRoute
  '/auth/register': typeof NotauthenticatedAuthRegisterRoute
  '/auth/reset-password': typeof NotauthenticatedAuthResetPasswordRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_not_authenticated': typeof NotauthenticatedRouteRouteWithChildren
  '/_authenticated/account': typeof AuthenticatedAccountRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_not_authenticated/auth/login': typeof NotauthenticatedAuthLoginRoute
  '/_not_authenticated/auth/register': typeof NotauthenticatedAuthRegisterRoute
  '/_not_authenticated/auth/reset-password': typeof NotauthenticatedAuthResetPasswordRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/account'
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/account'
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_not_authenticated'
    | '/_authenticated/account'
    | '/_authenticated/'
    | '/_not_authenticated/auth/login'
    | '/_not_authenticated/auth/register'
    | '/_not_authenticated/auth/reset-password'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  NotauthenticatedRouteRoute: typeof NotauthenticatedRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  NotauthenticatedRouteRoute: NotauthenticatedRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_not_authenticated"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/account",
        "/_authenticated/"
      ]
    },
    "/_not_authenticated": {
      "filePath": "_not_authenticated/route.tsx",
      "children": [
        "/_not_authenticated/auth/login",
        "/_not_authenticated/auth/register",
        "/_not_authenticated/auth/reset-password"
      ]
    },
    "/_authenticated/account": {
      "filePath": "_authenticated/account.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_not_authenticated/auth/login": {
      "filePath": "_not_authenticated/auth/login.tsx",
      "parent": "/_not_authenticated"
    },
    "/_not_authenticated/auth/register": {
      "filePath": "_not_authenticated/auth/register.tsx",
      "parent": "/_not_authenticated"
    },
    "/_not_authenticated/auth/reset-password": {
      "filePath": "_not_authenticated/auth/reset-password.tsx",
      "parent": "/_not_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
