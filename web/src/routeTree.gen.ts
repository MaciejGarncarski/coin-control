/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PrivacyPolicyRouteImport } from './routes/privacy-policy'
import { Route as UnauthenticatedRouteRouteImport } from './routes/_unauthenticated/route'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as AuthenticatedTransactionsRouteImport } from './routes/_authenticated/transactions'
import { Route as AuthenticatedAnalyticsRouteImport } from './routes/_authenticated/analytics'
import { Route as AuthenticatedAccountRouteImport } from './routes/_authenticated/account'
import { Route as UnauthenticatedAuthIndexRouteImport } from './routes/_unauthenticated/auth/index'
import { Route as UnauthenticatedAuthRegisterRouteImport } from './routes/_unauthenticated/auth/register'
import { Route as UnauthenticatedAuthPasswordResetRouteImport } from './routes/_unauthenticated/auth/password-reset'
import { Route as UnauthenticatedAuthLoginRouteImport } from './routes/_unauthenticated/auth/login'
import { Route as UnauthenticatedAuthForgotPasswordRouteImport } from './routes/_unauthenticated/auth/forgot-password'
import { Route as AuthenticatedAuthVerifyEmailRouteImport } from './routes/_authenticated/auth/verify-email'

const PrivacyPolicyRoute = PrivacyPolicyRouteImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRouteImport,
} as any)
const UnauthenticatedRouteRoute = UnauthenticatedRouteRouteImport.update({
  id: '/_unauthenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedTransactionsRoute =
  AuthenticatedTransactionsRouteImport.update({
    id: '/transactions',
    path: '/transactions',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAnalyticsRoute = AuthenticatedAnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAccountRoute = AuthenticatedAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const UnauthenticatedAuthIndexRoute =
  UnauthenticatedAuthIndexRouteImport.update({
    id: '/auth/',
    path: '/auth/',
    getParentRoute: () => UnauthenticatedRouteRoute,
  } as any)
const UnauthenticatedAuthRegisterRoute =
  UnauthenticatedAuthRegisterRouteImport.update({
    id: '/auth/register',
    path: '/auth/register',
    getParentRoute: () => UnauthenticatedRouteRoute,
  } as any)
const UnauthenticatedAuthPasswordResetRoute =
  UnauthenticatedAuthPasswordResetRouteImport.update({
    id: '/auth/password-reset',
    path: '/auth/password-reset',
    getParentRoute: () => UnauthenticatedRouteRoute,
  } as any)
const UnauthenticatedAuthLoginRoute =
  UnauthenticatedAuthLoginRouteImport.update({
    id: '/auth/login',
    path: '/auth/login',
    getParentRoute: () => UnauthenticatedRouteRoute,
  } as any)
const UnauthenticatedAuthForgotPasswordRoute =
  UnauthenticatedAuthForgotPasswordRouteImport.update({
    id: '/auth/forgot-password',
    path: '/auth/forgot-password',
    getParentRoute: () => UnauthenticatedRouteRoute,
  } as any)
const AuthenticatedAuthVerifyEmailRoute =
  AuthenticatedAuthVerifyEmailRouteImport.update({
    id: '/auth/verify-email',
    path: '/auth/verify-email',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/account': typeof AuthenticatedAccountRoute
  '/analytics': typeof AuthenticatedAnalyticsRoute
  '/transactions': typeof AuthenticatedTransactionsRoute
  '/': typeof AuthenticatedIndexRoute
  '/auth/verify-email': typeof AuthenticatedAuthVerifyEmailRoute
  '/auth/forgot-password': typeof UnauthenticatedAuthForgotPasswordRoute
  '/auth/login': typeof UnauthenticatedAuthLoginRoute
  '/auth/password-reset': typeof UnauthenticatedAuthPasswordResetRoute
  '/auth/register': typeof UnauthenticatedAuthRegisterRoute
  '/auth': typeof UnauthenticatedAuthIndexRoute
}
export interface FileRoutesByTo {
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/account': typeof AuthenticatedAccountRoute
  '/analytics': typeof AuthenticatedAnalyticsRoute
  '/transactions': typeof AuthenticatedTransactionsRoute
  '/': typeof AuthenticatedIndexRoute
  '/auth/verify-email': typeof AuthenticatedAuthVerifyEmailRoute
  '/auth/forgot-password': typeof UnauthenticatedAuthForgotPasswordRoute
  '/auth/login': typeof UnauthenticatedAuthLoginRoute
  '/auth/password-reset': typeof UnauthenticatedAuthPasswordResetRoute
  '/auth/register': typeof UnauthenticatedAuthRegisterRoute
  '/auth': typeof UnauthenticatedAuthIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_unauthenticated': typeof UnauthenticatedRouteRouteWithChildren
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/_authenticated/account': typeof AuthenticatedAccountRoute
  '/_authenticated/analytics': typeof AuthenticatedAnalyticsRoute
  '/_authenticated/transactions': typeof AuthenticatedTransactionsRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/auth/verify-email': typeof AuthenticatedAuthVerifyEmailRoute
  '/_unauthenticated/auth/forgot-password': typeof UnauthenticatedAuthForgotPasswordRoute
  '/_unauthenticated/auth/login': typeof UnauthenticatedAuthLoginRoute
  '/_unauthenticated/auth/password-reset': typeof UnauthenticatedAuthPasswordResetRoute
  '/_unauthenticated/auth/register': typeof UnauthenticatedAuthRegisterRoute
  '/_unauthenticated/auth/': typeof UnauthenticatedAuthIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/privacy-policy'
    | '/account'
    | '/analytics'
    | '/transactions'
    | '/'
    | '/auth/verify-email'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/password-reset'
    | '/auth/register'
    | '/auth'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/privacy-policy'
    | '/account'
    | '/analytics'
    | '/transactions'
    | '/'
    | '/auth/verify-email'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/password-reset'
    | '/auth/register'
    | '/auth'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_unauthenticated'
    | '/privacy-policy'
    | '/_authenticated/account'
    | '/_authenticated/analytics'
    | '/_authenticated/transactions'
    | '/_authenticated/'
    | '/_authenticated/auth/verify-email'
    | '/_unauthenticated/auth/forgot-password'
    | '/_unauthenticated/auth/login'
    | '/_unauthenticated/auth/password-reset'
    | '/_unauthenticated/auth/register'
    | '/_unauthenticated/auth/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  UnauthenticatedRouteRoute: typeof UnauthenticatedRouteRouteWithChildren
  PrivacyPolicyRoute: typeof PrivacyPolicyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/privacy-policy': {
      id: '/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_unauthenticated': {
      id: '/_unauthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/transactions': {
      id: '/_authenticated/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof AuthenticatedTransactionsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/analytics': {
      id: '/_authenticated/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AuthenticatedAnalyticsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/account': {
      id: '/_authenticated/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AuthenticatedAccountRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_unauthenticated/auth/': {
      id: '/_unauthenticated/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof UnauthenticatedAuthIndexRouteImport
      parentRoute: typeof UnauthenticatedRouteRoute
    }
    '/_unauthenticated/auth/register': {
      id: '/_unauthenticated/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof UnauthenticatedAuthRegisterRouteImport
      parentRoute: typeof UnauthenticatedRouteRoute
    }
    '/_unauthenticated/auth/password-reset': {
      id: '/_unauthenticated/auth/password-reset'
      path: '/auth/password-reset'
      fullPath: '/auth/password-reset'
      preLoaderRoute: typeof UnauthenticatedAuthPasswordResetRouteImport
      parentRoute: typeof UnauthenticatedRouteRoute
    }
    '/_unauthenticated/auth/login': {
      id: '/_unauthenticated/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof UnauthenticatedAuthLoginRouteImport
      parentRoute: typeof UnauthenticatedRouteRoute
    }
    '/_unauthenticated/auth/forgot-password': {
      id: '/_unauthenticated/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof UnauthenticatedAuthForgotPasswordRouteImport
      parentRoute: typeof UnauthenticatedRouteRoute
    }
    '/_authenticated/auth/verify-email': {
      id: '/_authenticated/auth/verify-email'
      path: '/auth/verify-email'
      fullPath: '/auth/verify-email'
      preLoaderRoute: typeof AuthenticatedAuthVerifyEmailRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedAccountRoute: typeof AuthenticatedAccountRoute
  AuthenticatedAnalyticsRoute: typeof AuthenticatedAnalyticsRoute
  AuthenticatedTransactionsRoute: typeof AuthenticatedTransactionsRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAuthVerifyEmailRoute: typeof AuthenticatedAuthVerifyEmailRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedAccountRoute: AuthenticatedAccountRoute,
  AuthenticatedAnalyticsRoute: AuthenticatedAnalyticsRoute,
  AuthenticatedTransactionsRoute: AuthenticatedTransactionsRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAuthVerifyEmailRoute: AuthenticatedAuthVerifyEmailRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface UnauthenticatedRouteRouteChildren {
  UnauthenticatedAuthForgotPasswordRoute: typeof UnauthenticatedAuthForgotPasswordRoute
  UnauthenticatedAuthLoginRoute: typeof UnauthenticatedAuthLoginRoute
  UnauthenticatedAuthPasswordResetRoute: typeof UnauthenticatedAuthPasswordResetRoute
  UnauthenticatedAuthRegisterRoute: typeof UnauthenticatedAuthRegisterRoute
  UnauthenticatedAuthIndexRoute: typeof UnauthenticatedAuthIndexRoute
}

const UnauthenticatedRouteRouteChildren: UnauthenticatedRouteRouteChildren = {
  UnauthenticatedAuthForgotPasswordRoute:
    UnauthenticatedAuthForgotPasswordRoute,
  UnauthenticatedAuthLoginRoute: UnauthenticatedAuthLoginRoute,
  UnauthenticatedAuthPasswordResetRoute: UnauthenticatedAuthPasswordResetRoute,
  UnauthenticatedAuthRegisterRoute: UnauthenticatedAuthRegisterRoute,
  UnauthenticatedAuthIndexRoute: UnauthenticatedAuthIndexRoute,
}

const UnauthenticatedRouteRouteWithChildren =
  UnauthenticatedRouteRoute._addFileChildren(UnauthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  UnauthenticatedRouteRoute: UnauthenticatedRouteRouteWithChildren,
  PrivacyPolicyRoute: PrivacyPolicyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
