services:
  cache:
    image: redis:6.2-alpine
    restart: always
    networks:
      - app-network
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data

  react-email:
    build:
      target: dev
      dockerfile: ./docker/react-email.Dockerfile
    profiles: [dev]
    volumes:
      - ./shared:/app/shared
    ports:
      - 3003:3000

  worker-dev:
    container_name: coin-control-worker-dev
    build:
      target: dev
      dockerfile: ./docker/worker.Dockerfile
    volumes:
      - ./worker/src:/app/worker/src
      - ./shared:/app/shared
    profiles: [dev]
    depends_on:
      - cache
    networks:
      - app-network
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - APP_ORIGIN=${APP_URL}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASS=${MAIL_PASS}
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81

  worker:
    image: ghcr.io/maciejgarncarski/coin-control-worker:latest
    container_name: coin-control-worker-prod
    build:
      target: prod
      dockerfile: ./docker/worker.Dockerfile
    profiles: [prod]
    depends_on:
      - cache
    networks:
      - app-network
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - APP_ORIGIN=${APP_URL}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASS=${MAIL_PASS}
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81

  api-dev:
    container_name: coin-control-api-dev
    depends_on:
      - cache
      - worker-dev
    build:
      target: dev
      dockerfile: ./docker/api.Dockerfile
    volumes:
      - ./api/src:/app/api/src
      - ./shared:/app/shared
    profiles: [dev]
    networks:
      - app-network
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - PORT=${API_PORT}
      - APP_ORIGIN=${APP_URL}
      - API_URL=${API_URL}
      - HOST=${HOST}
      - DATABASE_URL=${DATABASE_URL}
      - API_SECRET=${API_SECRET}
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81

  api:
    image: ghcr.io/maciejgarncarski/coin-control-api:latest
    container_name: coin-control-api-prod
    depends_on:
      - cache
      - worker
    networks:
      - app-network
    build:
      target: prod
      dockerfile: ./docker/api.Dockerfile
    profiles: [prod]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - PORT=${API_PORT}
      - APP_ORIGIN=${APP_URL}
      - API_URL=${API_URL}
      - HOST=${HOST}
      - DATABASE_URL=${DATABASE_URL}
      - API_SECRET=${API_SECRET}
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81

  web-dev:
    container_name: coin-control-web-dev
    build:
      target: dev
      dockerfile: ./docker/web.Dockerfile
    depends_on:
      - api-dev
    volumes:
      - ./web/src:/app/web/src
      - ./shared:/app/shared
    profiles: [dev]
    ports:
      - "${WEB_PORT}:${WEB_PORT}"
    environment:
      - VITE_PORT=${WEB_PORT}
      - VITE_API_URL=${API_URL}
      - VITE_APP_URL=${APP_URL}
  web:
    container_name: coin-control-web-prod
    build:
      dockerfile: ./docker/web.Dockerfile
      args:
        VITE_API_URL: ${API_URL}
        VITE_PORT: ${WEB_PORT}
        NODE_ENV: production
    depends_on:
      - api
    environment:
      - NODE_ENV=production
    profiles: [prod]
    ports:
      - "${WEB_PORT}:80"

networks:
  app-network:
    driver: bridge

volumes:
  cache:
    driver: local
