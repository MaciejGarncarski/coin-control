generator client {
  provider        = "prisma-client"
  output          = "../src/generated/prisma"
  previewFeatures = ["relationJoins"]
  binaryTargets   = ["native", "linux-musl-openssl-3.0.x"]
  moduleFormat    = "esm"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model email_verification {
  id                 String      @id @db.Uuid
  user_id            String      @db.Uuid
  otp                String?
  expires_at         DateTime    @db.Timestamp(6)
  verified           Boolean?    @default(false)
  created_at         DateTime?   @default(now()) @db.Timestamp(6)
  verification_token String?     @db.VarChar(255)
  email_id           String      @db.Uuid
  user_emails        user_emails @relation(fields: [email_id], references: [email_id], onDelete: Cascade, onUpdate: NoAction)
  users              users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([email_id], map: "idx_email_verification_email_id")
  @@index([expires_at], map: "idx_email_verification_expires_at")
  @@index([verification_token], map: "idx_email_verification_token")
  @@index([user_id], map: "idx_email_verification_user_id")
}

model reset_password_codes {
  id         String   @id @db.Uuid
  user_id    String   @db.Uuid
  reset_code String   @db.VarChar(255)
  expires_at DateTime @db.Timestamptz(6)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  used       Boolean  @default(false)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")

  @@index([expires_at], map: "idx_reset_password_codes_expiry_timestamp")
  @@index([reset_code], map: "idx_reset_password_codes_reset_code")
  @@index([used], map: "idx_reset_password_codes_used")
  @@index([user_id], map: "idx_reset_password_codes_user_id")
}

model sessions {
  sid              String    @id
  data             String
  expire_at        DateTime  @db.Timestamp(6)
  user_id          String    @db.Uuid
  last_access      DateTime? @db.Timestamptz(6)
  device_type      String?   @db.VarChar(255)
  operating_system String?   @db.VarChar(255)
  browser          String?   @db.VarChar(255)
  ip_address       String?   @db.VarChar(45)
  location         String?   @db.VarChar(255)
  id               String    @db.Uuid
  users            users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([id], map: "idx_id")
  @@index([expire_at], map: "idx_sessions_expire_at")
  @@index([last_access], map: "idx_sessions_last_access")
  @@index([user_id], map: "idx_sessions_user_id")
}

model user_emails {
  email_id           String               @id @db.Uuid
  user_id            String               @db.Uuid
  email              String               @unique @db.VarChar(255)
  is_primary         Boolean?             @default(false)
  is_verified        Boolean?             @default(false)
  email_verification email_verification[]
  users              users                @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([is_primary], map: "idx_user_emails_is_primary")
  @@index([user_id], map: "idx_user_emails_user_id")
}

model users {
  id                   String                 @id @db.Uuid
  email                String                 @unique
  password_hash        String?
  created_at           DateTime?              @default(now()) @db.Timestamptz(6)
  name                 String?                @db.VarChar(255)
  avatar_url           String?                @db.VarChar(255)
  google_user_id       String?                @unique @db.VarChar(255)
  email_verification   email_verification[]
  reset_password_codes reset_password_codes[]
  sessions             sessions[]
  transactions         transactions[]
  user_emails          user_emails[]

  @@index([email], map: "idx_users_email")
  @@index([google_user_id], map: "idx_users_google_user_id")
}

model transactions {
  transaction_id   String                @id @db.Uuid
  user_id          String                @db.Uuid
  transaction_date DateTime              @db.Timestamptz(6)
  amount           Decimal               @db.Decimal(15, 2)
  description      String?
  category         transaction_category?
  users            users                 @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([transaction_date], map: "idx_transaction_date")
  @@index([user_id], map: "idx_user_id")
  @@index([category], map: "idx_category")
}

enum transaction_category {
  other
  transportation
  groceries
  income
  foodAndDrink
  utilities
  housing
  shopping
}
